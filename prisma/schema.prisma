// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model UserType {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  description String
  label       String
  crdate      DateTime     @default(now())
  UserConfig  UserConfig[]
}

model UserConfig {
  id           Int      @id @default(autoincrement())
  user_type    UserType @relation(fields: [id_user_type], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_user_type Int
  gold         Float
  gold_mod     Float
  crdate       DateTime @default(now())
  User         User[]
}

model User {
  id             String     @id @default(cuid())
  user_config    UserConfig @relation(fields: [id_user_config], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_user_config Int
  idvk           Int
  gold           Float
  nickname       String
  crdate         DateTime   @default(now())
  Weapon         Weapon[]
  Armor          Armor[]
  Skill          Skill[]
  Body           Body[]
}

model SkillCategory {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String
  label       String
  crdate      DateTime      @default(now())
  SkillConfig SkillConfig[]
}

model SkillConfig {
  id                Int            @id @default(autoincrement())
  skill_category    SkillCategory  @relation(fields: [id_skill_category], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_skill_category Int
  name              String         @unique
  description       String
  label             String
  hidden            Boolean        @default(false)
  crdate            DateTime       @default(now())
  Skill             Skill[]
  WeaponConfig      WeaponConfig[]
  ArmorConfig       ArmorConfig[]
  BodyConfig        BodyConfig[]
}

model BodyConfig {
  id              Int         @id @default(autoincrement())
  skill_config    SkillConfig @relation(fields: [id_skill_config], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_skill_config Int
  atk             Float
  atk_mod         Float
  def             Float
  def_mod         Float
  health          Float
  health_mod      Float
  hidden          Boolean     @default(false)
  Body            Body[]
}

model WeaponConfig {
  id              Int         @id @default(autoincrement())
  skill_config    SkillConfig @relation(fields: [id_skill_config], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_skill_config Int
  atk             Float
  atk_mod         Float
  lvl             Float
  lvl_mod         Float
  hp              Float
  hp_mod          Float
  hidden          Boolean     @default(false)
  crdate          DateTime    @default(now())
  Weapon          Weapon[]
}

model ArmorConfig {
  id              Int         @id @default(autoincrement())
  skill_config    SkillConfig @relation(fields: [id_skill_config], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_skill_config Int
  def             Float
  def_mod         Float
  lvl             Float
  lvl_mod         Float
  hp              Float
  hp_mod          Float
  hidden          Boolean     @default(false)
  crdate          DateTime    @default(now())
  Armor           Armor[]
}

model Body {
  id             String     @id @default(cuid())
  user           User       @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_user        String
  body_config    BodyConfig @relation(fields: [id_body_config], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_body_config Int
  atk_min        Float
  atk_max        Float
  def_min        Float
  def_max        Float
  health         Float
  name           String
  crdate         DateTime   @default(now())
  Weapon         Weapon[]
  Armor          Armor[]
}

model Weapon {
  id               String       @id @default(cuid())
  user             User         @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_user          String
  weapon_config    WeaponConfig @relation(fields: [id_weapon_config], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_weapon_config Int
  body             Body         @relation(fields: [id_body], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_body          String
  lvl              Float
  atk_min          Float
  atk_max          Float
  hp               Float
  name             String
  equip            Boolean      @default(false)
  crdate           DateTime     @default(now())
}

model Armor {
  id              String      @id @default(cuid())
  user            User        @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_user         String
  armor_config    ArmorConfig @relation(fields: [id_armor_config], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_armor_config Int
  body            Body        @relation(fields: [id_body], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_body         String
  lvl             Float
  def_min         Float
  def_max         Float
  hp              Float
  name            String
  equip           Boolean     @default(false)
  crdate          DateTime    @default(now())
}

model Skill {
  id              String      @id @default(cuid())
  user            User        @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_user         String
  skill_config    SkillConfig @relation(fields: [id_skill_config], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_skill_config Int
  xp              Float       @default(0)
  crdate          DateTime    @default(now())
}
